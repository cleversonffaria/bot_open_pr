[
    {
        "label": "argparse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "argparse",
        "description": "argparse",
        "detail": "argparse",
        "documentation": {}
    },
    {
        "label": "AIService",
        "importPath": "core.ai_service",
        "description": "core.ai_service",
        "isExtraImport": true,
        "detail": "core.ai_service",
        "documentation": {}
    },
    {
        "label": "GitService",
        "importPath": "core.git_service",
        "description": "core.git_service",
        "isExtraImport": true,
        "detail": "core.git_service",
        "documentation": {}
    },
    {
        "label": "GitService",
        "importPath": "core.git_service",
        "description": "core.git_service",
        "isExtraImport": true,
        "detail": "core.git_service",
        "documentation": {}
    },
    {
        "label": "GitHubService",
        "importPath": "core.github_service",
        "description": "core.github_service",
        "isExtraImport": true,
        "detail": "core.github_service",
        "documentation": {}
    },
    {
        "label": "UIService",
        "importPath": "core.ui_service",
        "description": "core.ui_service",
        "isExtraImport": true,
        "detail": "core.ui_service",
        "documentation": {}
    },
    {
        "label": "UIService",
        "importPath": "core.ui_service",
        "description": "core.ui_service",
        "isExtraImport": true,
        "detail": "core.ui_service",
        "documentation": {}
    },
    {
        "label": "OPTION_DESCRIPTIONS",
        "importPath": "utils.constants",
        "description": "utils.constants",
        "isExtraImport": true,
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utils.constants",
        "description": "utils.constants",
        "isExtraImport": true,
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "utils.constants",
        "description": "utils.constants",
        "isExtraImport": true,
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "OpenAI",
        "importPath": "openai",
        "description": "openai",
        "isExtraImport": true,
        "detail": "openai",
        "documentation": {}
    },
    {
        "label": "load_dotenv",
        "importPath": "dotenv",
        "description": "dotenv",
        "isExtraImport": true,
        "detail": "dotenv",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "SystemUtils",
        "importPath": "utils.system_utils",
        "description": "utils.system_utils",
        "isExtraImport": true,
        "detail": "utils.system_utils",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "CoraCommands",
        "importPath": "cli.commands",
        "description": "cli.commands",
        "isExtraImport": true,
        "detail": "cli.commands",
        "documentation": {}
    },
    {
        "label": "CoraCommands",
        "kind": 6,
        "importPath": "cli.commands",
        "description": "cli.commands",
        "peekOfCode": "class CoraCommands:\n    def __init__(self):\n        self.ai_service = AIService()\n        self.git_service = GitService()\n        self.github_service = GitHubService()\n        self.ui_service = UIService()\n    def parse_arguments(self):\n        parser = argparse.ArgumentParser(description=\"Assistente de fluxo de trabalho Git com IA\", add_help=False)\n        parser.add_argument(\"--branch\", \"-b\", action=\"store_true\", help=\"Cria uma nova branch\")\n        parser.add_argument(\"--commit\", \"-c\", action=\"store_true\", help=\"Gera e executa commit\")",
        "detail": "cli.commands",
        "documentation": {}
    },
    {
        "label": "AIService",
        "kind": 6,
        "importPath": "core.ai_service",
        "description": "core.ai_service",
        "peekOfCode": "class AIService:\n    def __init__(self):\n        self.api_key = os.getenv(API_KEY_VAR)\n        self.api_base_url = os.getenv(API_BASE_URL_VAR)\n        self.model = os.getenv(MODEL_VAR)\n        client_kwargs = {\"api_key\": self.api_key}\n        if self.api_base_url:\n            client_kwargs[\"base_url\"] = self.api_base_url\n        self.client = OpenAI(**client_kwargs)\n    def is_configured(self):",
        "detail": "core.ai_service",
        "documentation": {}
    },
    {
        "label": "GitService",
        "kind": 6,
        "importPath": "core.git_service",
        "description": "core.git_service",
        "peekOfCode": "class GitService:\n    def __init__(self):\n        pass\n    def run_command(self, command, check=True):\n        try:\n            result = subprocess.run(\n                command,\n                stdout=subprocess.PIPE,\n                stderr=subprocess.PIPE,\n                text=True,",
        "detail": "core.git_service",
        "documentation": {}
    },
    {
        "label": "GitHubService",
        "kind": 6,
        "importPath": "core.github_service",
        "description": "core.github_service",
        "peekOfCode": "class GitHubService:\n    def __init__(self):\n        self.git_service = GitService()\n        self.system_utils = SystemUtils()\n    def check_cli_available(self):\n        try:\n            self.git_service.run_command([\"gh\", \"--version\"])\n            self.git_service.run_command([\"gh\", \"auth\", \"status\"])\n            self.git_service.run_command([\"gh\", \"repo\", \"view\"])\n            return True",
        "detail": "core.github_service",
        "documentation": {}
    },
    {
        "label": "UIService",
        "kind": 6,
        "importPath": "core.ui_service",
        "description": "core.ui_service",
        "peekOfCode": "class UIService:\n    def __init__(self):\n        pass\n    def show_version(self):\n        print(f\"ü§ñ {COMMAND_NAME.title()} v{VERSION}\")\n        print(\"Assistente de fluxo de trabalho Git com IA\")\n        print(REPOSITORY_URL)\n    def show_welcome(self):\n        print(f\"\"\"\nü§ñ {MESSAGES[\"WELCOME_TITLE\"].format(command_name=COMMAND_NAME.title(), version=VERSION)}",
        "detail": "core.ui_service",
        "documentation": {}
    },
    {
        "label": "VERSION",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "VERSION = \"1.0.0\"\nCOMMAND_NAME = \"cora\"\nREPOSITORY_URL = f\"https://github.com/cleversonffaria/{COMMAND_NAME}\"\n# API Configuration - estes ser√£o substitu√≠dos pelos valores .env\nAPI_KEY_VAR = \"API_KEY\"\nAPI_BASE_URL_VAR = \"API_BASE_URL\"\nMODEL_VAR = \"MODEL\"\nDEFAULT_TEMPERATURE = 0.3\nDEFAULT_BRANCH_TEMPERATURE = 0.5\nMESSAGES = {",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "COMMAND_NAME",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "COMMAND_NAME = \"cora\"\nREPOSITORY_URL = f\"https://github.com/cleversonffaria/{COMMAND_NAME}\"\n# API Configuration - estes ser√£o substitu√≠dos pelos valores .env\nAPI_KEY_VAR = \"API_KEY\"\nAPI_BASE_URL_VAR = \"API_BASE_URL\"\nMODEL_VAR = \"MODEL\"\nDEFAULT_TEMPERATURE = 0.3\nDEFAULT_BRANCH_TEMPERATURE = 0.5\nMESSAGES = {\n    \"WELCOME_TITLE\": \"Bem-vindo ao {command_name} v{version}!\",",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "REPOSITORY_URL",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "REPOSITORY_URL = f\"https://github.com/cleversonffaria/{COMMAND_NAME}\"\n# API Configuration - estes ser√£o substitu√≠dos pelos valores .env\nAPI_KEY_VAR = \"API_KEY\"\nAPI_BASE_URL_VAR = \"API_BASE_URL\"\nMODEL_VAR = \"MODEL\"\nDEFAULT_TEMPERATURE = 0.3\nDEFAULT_BRANCH_TEMPERATURE = 0.5\nMESSAGES = {\n    \"WELCOME_TITLE\": \"Bem-vindo ao {command_name} v{version}!\",\n    \"WELCOME_SUBTITLE\": \"Seu assistente de IA para desenvolvimento Git produtivo\",",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "API_KEY_VAR",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "API_KEY_VAR = \"API_KEY\"\nAPI_BASE_URL_VAR = \"API_BASE_URL\"\nMODEL_VAR = \"MODEL\"\nDEFAULT_TEMPERATURE = 0.3\nDEFAULT_BRANCH_TEMPERATURE = 0.5\nMESSAGES = {\n    \"WELCOME_TITLE\": \"Bem-vindo ao {command_name} v{version}!\",\n    \"WELCOME_SUBTITLE\": \"Seu assistente de IA para desenvolvimento Git produtivo\",\n    \"API_KEY_NOT_SET\": \"‚ùå API_KEY n√£o configurada.\",\n    \"API_KEY_HELP\": \"   Por favor, defina-a no arquivo .env ou no seu ambiente.\",",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "API_BASE_URL_VAR",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "API_BASE_URL_VAR = \"API_BASE_URL\"\nMODEL_VAR = \"MODEL\"\nDEFAULT_TEMPERATURE = 0.3\nDEFAULT_BRANCH_TEMPERATURE = 0.5\nMESSAGES = {\n    \"WELCOME_TITLE\": \"Bem-vindo ao {command_name} v{version}!\",\n    \"WELCOME_SUBTITLE\": \"Seu assistente de IA para desenvolvimento Git produtivo\",\n    \"API_KEY_NOT_SET\": \"‚ùå API_KEY n√£o configurada.\",\n    \"API_KEY_HELP\": \"   Por favor, defina-a no arquivo .env ou no seu ambiente.\",\n    \"NO_CHANGES\": \"‚úÖ N√£o h√° altera√ß√µes para commit.\",",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "MODEL_VAR",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "MODEL_VAR = \"MODEL\"\nDEFAULT_TEMPERATURE = 0.3\nDEFAULT_BRANCH_TEMPERATURE = 0.5\nMESSAGES = {\n    \"WELCOME_TITLE\": \"Bem-vindo ao {command_name} v{version}!\",\n    \"WELCOME_SUBTITLE\": \"Seu assistente de IA para desenvolvimento Git produtivo\",\n    \"API_KEY_NOT_SET\": \"‚ùå API_KEY n√£o configurada.\",\n    \"API_KEY_HELP\": \"   Por favor, defina-a no arquivo .env ou no seu ambiente.\",\n    \"NO_CHANGES\": \"‚úÖ N√£o h√° altera√ß√µes para commit.\",\n    \"OPERATION_CANCELLED\": \"üö´ Opera√ß√£o cancelada pelo usu√°rio. Saindo.\"",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "DEFAULT_TEMPERATURE",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "DEFAULT_TEMPERATURE = 0.3\nDEFAULT_BRANCH_TEMPERATURE = 0.5\nMESSAGES = {\n    \"WELCOME_TITLE\": \"Bem-vindo ao {command_name} v{version}!\",\n    \"WELCOME_SUBTITLE\": \"Seu assistente de IA para desenvolvimento Git produtivo\",\n    \"API_KEY_NOT_SET\": \"‚ùå API_KEY n√£o configurada.\",\n    \"API_KEY_HELP\": \"   Por favor, defina-a no arquivo .env ou no seu ambiente.\",\n    \"NO_CHANGES\": \"‚úÖ N√£o h√° altera√ß√µes para commit.\",\n    \"OPERATION_CANCELLED\": \"üö´ Opera√ß√£o cancelada pelo usu√°rio. Saindo.\"\n}",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "DEFAULT_BRANCH_TEMPERATURE",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "DEFAULT_BRANCH_TEMPERATURE = 0.5\nMESSAGES = {\n    \"WELCOME_TITLE\": \"Bem-vindo ao {command_name} v{version}!\",\n    \"WELCOME_SUBTITLE\": \"Seu assistente de IA para desenvolvimento Git produtivo\",\n    \"API_KEY_NOT_SET\": \"‚ùå API_KEY n√£o configurada.\",\n    \"API_KEY_HELP\": \"   Por favor, defina-a no arquivo .env ou no seu ambiente.\",\n    \"NO_CHANGES\": \"‚úÖ N√£o h√° altera√ß√µes para commit.\",\n    \"OPERATION_CANCELLED\": \"üö´ Opera√ß√£o cancelada pelo usu√°rio. Saindo.\"\n}\nHELP_SECTIONS = {",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "MESSAGES",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "MESSAGES = {\n    \"WELCOME_TITLE\": \"Bem-vindo ao {command_name} v{version}!\",\n    \"WELCOME_SUBTITLE\": \"Seu assistente de IA para desenvolvimento Git produtivo\",\n    \"API_KEY_NOT_SET\": \"‚ùå API_KEY n√£o configurada.\",\n    \"API_KEY_HELP\": \"   Por favor, defina-a no arquivo .env ou no seu ambiente.\",\n    \"NO_CHANGES\": \"‚úÖ N√£o h√° altera√ß√µes para commit.\",\n    \"OPERATION_CANCELLED\": \"üö´ Opera√ß√£o cancelada pelo usu√°rio. Saindo.\"\n}\nHELP_SECTIONS = {\n    \"USAGE\": \"üìã USO:\",",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "HELP_SECTIONS",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "HELP_SECTIONS = {\n    \"USAGE\": \"üìã USO:\",\n    \"OPTIONS\": \"üîß OP√á√ïES:\",\n    \"EXAMPLES\": \"‚ú® EXEMPLOS:\",\n    \"SETUP\": \"üîë CONFIGURA√á√ÉO:\",\n    \"NOTE\": \"üí° NOTA:\"\n}\nOPTION_DESCRIPTIONS = {\n    \"BRANCH\": \"Gera um nome de branch antes de fazer commit\",\n    \"PR\": \"Cria pull request automaticamente ou abre no navegador\",",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "OPTION_DESCRIPTIONS",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "OPTION_DESCRIPTIONS = {\n    \"BRANCH\": \"Gera um nome de branch antes de fazer commit\",\n    \"PR\": \"Cria pull request automaticamente ou abre no navegador\",\n    \"VERSION\": \"Mostra informa√ß√µes da vers√£o\",\n    \"HELP\": \"Mostra esta mensagem de ajuda\"\n}\nEXAMPLE_DESCRIPTIONS = {\n    \"COMMIT_ONLY\": \"Gera apenas mensagem de commit\",\n    \"BRANCH_COMMIT\": \"Gera branch + mensagem de commit\", \n    \"FULL_WORKFLOW\": \"Fluxo completo: branch + commit + push + PR\"",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "EXAMPLE_DESCRIPTIONS",
        "kind": 5,
        "importPath": "utils.constants",
        "description": "utils.constants",
        "peekOfCode": "EXAMPLE_DESCRIPTIONS = {\n    \"COMMIT_ONLY\": \"Gera apenas mensagem de commit\",\n    \"BRANCH_COMMIT\": \"Gera branch + mensagem de commit\", \n    \"FULL_WORKFLOW\": \"Fluxo completo: branch + commit + push + PR\"\n}",
        "detail": "utils.constants",
        "documentation": {}
    },
    {
        "label": "SystemUtils",
        "kind": 6,
        "importPath": "utils.system_utils",
        "description": "utils.system_utils",
        "peekOfCode": "class SystemUtils:\n    def __init__(self):\n        pass\n    def open_in_browser(self, url):\n        command = []\n        if sys.platform.startswith('linux'):\n            command = ['xdg-open', url]\n        elif sys.platform == 'darwin':\n            command = ['open', url]\n        elif sys.platform == 'win32':",
        "detail": "utils.system_utils",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def main():\n    ui_service = UIService()\n    cora_commands = CoraCommands()\n    try:\n        cora_commands.execute()\n    except KeyboardInterrupt:\n        ui_service.show_operation_cancelled()\n        exit(130)\nif __name__ == \"__main__\":\n    main()",
        "detail": "main",
        "documentation": {}
    }
]