**Feature:** Atualização e aprimoramento do fluxo de geração de relatórios de Pull Request com integração de IA

**Descrição:**
Implementação de melhorias na comunicação com a API de IA, reorganização do código para maior modularidade, adição de novos prompts detalhados e criação de scripts de instalação e desinstalação automatizados para facilitar a configuração do ambiente.

**Resumo:**
- 🚀 Criação do arquivo `main.py` para centralizar a lógica de execução do fluxo de trabalho.
- 🔧 Reestruturação do arquivo `bot_pr.py` para incluir funções de requisição, processamento e interação com o usuário.
- 📝 Inclusão de arquivo `constants.py` para gerenciamento de constantes de configuração.
- 🧪 Atualização do `requirements.txt` com dependências necessárias.
- 🎨 Melhoria na mensagem de prompt e na estrutura do prompt enviado à API, com detalhamento técnico e uso de markdown.
- 🌿 Scripts `install.sh` e `uninstall.sh` para automação de instalação e remoção do ambiente e configurações.
- 🚀 Otimizações na manipulação de subprocessos e na configuração do ambiente de execução.

**Descrição do problema:**
A necessidade era de automatizar a geração de relatórios detalhados de Pull Requests usando IA, garantindo facilidade de instalação, configuração e manutenção do ambiente, além de melhorar a qualidade das interações com a API de IA e a modularidade do código.

**Solução implementada:**
- ➕ Criação de `main.py` para gerenciar o fluxo principal, incluindo comandos CLI, gerenciamento de branches, commits e PRs.
- 🔧 Reestruturação do `bot_pr.py` com funções específicas para requisições, processamento de respostas, geração de sugestões e interação com o usuário.
- 📦 Organização de constantes em `constants.py` para facilitar ajustes futuros.
- 🧪 Atualização do `requirements.txt` para incluir `openai` e `python-dotenv`.
- 📝 Melhoria no prompt enviado à API, incluindo instruções detalhadas e uso de markdown e emojis.
- 🚀 Scripts `install.sh` e `uninstall.sh` automáticos para instalação do ambiente virtual, dependências, configuração de PATH, e limpeza.
- 🎨 Melhorias na experiência do usuário, com prompts interativos e mensagens claras.
- 🌿 Adaptação do código para suportar diferentes provedores de API, com configuração dinâmica via `.env`.

**Impacto Esperado:**
- Facilita a instalação e manutenção do projeto com scripts automatizados.
- Melhora a qualidade e detalhamento dos relatórios gerados pelo IA.
- Proporciona uma experiência de uso mais amigável e interativa.
- Permite fácil adaptação a diferentes provedores de API e ambientes de desenvolvimento.
- Aumenta a produtividade do time ao automatizar tarefas repetitivas de gerenciamento de PRs e branches.